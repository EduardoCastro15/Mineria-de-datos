# -*- coding: utf-8 -*-
"""1_Arboles.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1q7FgYljcGvw579LDxI76OvhS3XKPDhyS

***Carga de las bibliotecas***
"""

import numpy as np 
import pandas as pd
from sklearn import tree
from sklearn import metrics
import matplotlib.pyplot as plt
from sklearn import preprocessing
from sklearn.metrics import accuracy_score
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split

"""***Carga del dataset***"""

df = pd.read_csv("/content/drive/MyDrive/ESCOM/8vo Semestre/Data Mining/Extraordinario/drug200.csv")
df[0:50]

"""***PreProcesamiento de los datos***"""

x = df[['Age', 'Sex', 'BP', 'Cholesterol', 'Na_to_K']].values

#Preprocesamiento del sexo
sex = preprocessing.LabelEncoder()
sex.fit(['F','M'])
x[:,1] = sex.transform(x[:,1]) 

#Preprocesamiento de Presión de la sangre
BP = preprocessing.LabelEncoder()
BP.fit([ 'LOW', 'NORMAL', 'HIGH'])
x[:,2] = BP.transform(x[:,2])

#Preprocesamiento del nivel de colesteról
Chol = preprocessing.LabelEncoder()
Chol.fit([ 'NORMAL', 'HIGH'])
x[:,3] = Chol.transform(x[:,3]) 

x[0:10]

"""***Visualización de la variable objetivo***"""

y = df["Drug"]
y[0:50]

"""***Configuración del árbol de decisión***"""

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=3)

"""***Modelado***"""

dt = DecisionTreeClassifier(criterion='gini')
dt

dt.fit(x_train,y_train)

"""***Predicción***"""

pt = dt.predict(x_test)
print(pt[0:5])
print(y_test[0:20])

"""***Medición de la precisión***"""

print("Accuracy of the decision tree: ", metrics.accuracy_score(y_test,pt))

"""***Visualización del árbol***"""

plt.figure(figsize=(15,15))
tree.plot_tree(dt,filled=True)